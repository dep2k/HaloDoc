# Welcome!
#
# This is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# An example query named "GetPost" might look like:
#
#     query GetPost {
#       singlePost(id: 123) {
#         id
#         title
#       }# Welcome!
#
# This is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# An example query named "GetPost" might look like:
#
#     query GetPost {
#       singlePost(id: 123) {
#         id

subscription SubscribeToCreateDoctor {
  subscribeToCreateDoctor {
    doctorId
    name
  }
}

subscription SubscribeForEndOfConsulation {
  subscribeForEndOfConsultation(username: "TestUser", createdAt: "1544960088795") {
    createdAt
  }
}




subscription SubscribeToCreateConversation {
  subscribeToCreateConversation(doctorId: "0bd9855e-a3f2-4616-8132-aed490973bf7") {
    username
    createdAt
    user {
      fullName
      type
    }
  }
}

subscription SubscribeToNewMessage {
  subscribeToNewMessage(conversationId: "deep-Raman-1539409150214") {
    text
    messageId
    conversationId
    createdAt
    user {
      username
      fullName
    }
  }
}


mutation CreateMessage {
  createMessage(input: 
    { 
      text: "A message", 
      conversationId: "deep-Raman-1539409150214",
      messageId:"383jd",
      user: 
       {username: "DoctorId3939393",
        fullName: "Some Doctor"},
    })
  {
     text
    messageId
    conversationId
    createdAt
    user {
      username
      fullName
    }
  }
}



mutation CreateConversation {
  createConversation(input: 
    {
      user: {
        username: "deep",
        userType: "Patient",
        fullName: "Deep A"
      },
      doctor: {
        name: "TestDoctor",
        speciality: "dog",
        doctorId: "TestDoctor"
      },
      questionsAndAnswers: [{question: "Question 1", answer: "Answer 1"}, 
        {question: "Question 2", answer: "Answer 2"},
      {question: "Question 3", answer: null},
      {question: "Question 4", answer: null},
      {question: "Question 5", answer: null}],
      pet: {username: "deep39303903", petId: "238280340932", category: "Canine"}
    }) {
    username
    createdAt
    user {
      fullName
      type
    }
    pet {
      category
      name
      race
      gender
      age
      origin
      use
      background
      weight
      
    }
    doctor {
      name
      speciality
      doctorId
    }
    doctorId
  
  }

}

mutation EndConversation {
  endConversation(username:"TestUser",createdAt:"1544960871426",conversationStatus:"CLOSED"){
    createdAt
  }
}

mutation ConfirmPayment {
  confirmPayment(username:"TestUser",createdAt:"1544497484205",payment:"DONE"){
    payment
  }
}



mutation CreateDoctor {
  createDoctor(input: 
    {
    name: "Ajay", 
    speciality: "dog",
    profilePic: "http:somthing",
    registrationId: "3423df", 
    phoneNo: "3838838383",
    email: "xyz@gmail.com", 
    homeTown: "patiala", 
    medicalCenter: "columbia",
    department: "child",
    address: "anand"}) 
  {
    doctorId
    name
    createdAt
    speciality
    profilePic
    registrationId
    phoneNo
    email
    homeTown
    medicalCenter
    department
    address
    isAvailable
    isOnline
  }
}

mutation CreatePet {
  createPet(input:
    {
      username: "deep", 
      category: "canine", 
      name: "bruno", 
      race: "american", 
      gender: "m", 
      age: "1",
      origin: "china", 
      use: "Some description about the pet", 
      background: "Some BG INfo", 
      weight: "5 Kig",
      petImage: "imageurl",
      color: "black",
      product: "productInfo",
      date: "393939393",
      feeding: "feedinginfo",
      vaccinations:[{name:"vacName", date:"38393"},{name:"fadsfa",date:"3939393"}]}) {
    petId
    username
  }
}


mutation UpdateHelper {
  updateHelper(input: {id: "2e4b9aca-25cc-4d14-b15c-afd123703bf7", name: "deep", isAvailable: false}) {
    id
    name
    isAvailable
  }
}

mutation CreateHelper {
  createHelper(input: {name: "fdfads", phoneNo: "afdfad", email: "Adfad", address: "Afdads", password: "Fadfa", isAvailable: true}) {
    id
    name
    isAvailable
  }
}

query ListDoctors {
  listDoctors(limit: 2, nextToken: null) {
    items {
      doctorId
      name
    }
    nextToken
  }
}

query ListAvailableDoctors {
  listAvailableDoctors(speciality: "dog",  limit: 20, nextToken: null) {
    items {
      doctorId
      name
      speciality
      isAvailable
      isOnline
    }
    nextToken
  }
}

query ListHelpers {
  listHelpers(filter: {isAvailable: {eq: true}}, limit: 2, nextToken: null) {
    items {
      name
      isAvailable
    }
    nextToken
  }
}

query GetPets {
  getPets(username: "deep") {
    items {
      petId
    }
  }
}



query GetUserConversations {
  getUserConversations(username: "TestUser", conversationStatus: "CLOSED") {
    items {
           username
     			 conversationStatus
           createdAt
           payment
           doctor {
               name
           }
           pet {
             name
             race
             origin
             age
             gender
             username
           }
        
        }
  }
}

query GetMessages {
  getMessages(conversationId:"Deep2018-1541949454649") {
    items {
      text
    }
  }
}
query GetDoctorConversations {
  getDoctorConversations(username: "TestDoctor", conversationStatus: "CLOSED") {
     items {
           username
     			 conversationStatus
           createdAt
           payment
           doctor {
               name
           }
           pet {
             name
             race
             origin
             age
             gender
             username
           }
        
        }
  }
}

query ListConversations {
  listConversations {
    items {
      username
    }
    nextToken
  }
}

#         title
#       }
#     }
#
# An example mutation named "PutPost" might look like:
#
#     mutation PutPost {
#       putPost(id: 123, title: "Hello, world!") {
#         id
#         title
#       }
#     }
#
# Keyboard shortcuts:
#
#  Prettify Query:  Ctrl+Shift+P (also removes comments)
#       Run Query:  Ctrl+Enter   (or press the play button above)
#   Auto Complete:  Ctrl+Space   (or just start typing)
#




#     }
#
# An example mutation named "PutPost" might look like:
#
#     mutation PutPost {
#       putPost(id: 123, title: "Hello, world!") {
#         id
#         title
#       }
#     }
#
# Keyboard shortcuts:
#
#  Prettify Query:  Ctrl+Shift+P (also removes comments)
#       Run Query:  Ctrl+Enter   (or press the play button above)
#   Auto Complete:  Ctrl+Space   (or just start typing)
#







